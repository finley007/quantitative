import pytest
import time
from concurrent.futures import ProcessPoolExecutor
from framework.localconcurrent import ProcessRunner, ProcessExcecutor
from framework.pagination import Pagination


data = {
    'IH2212': {
        "20220808" : ['000001','000002','000003','000004','000005', '000006','000007','000008','000009','000010'],
        "20220809" : ['000001','000002','000003','000004','000005', '000006','000007','000008','000009','000010'],
        "20220810" : ['000001','000002','000003','000004','000005', '000006','000007','000008','000009','000010'],
        "20220811" : ['000001','000002','000003','000004','000005', '000006','000007','000008','000009','000010'],
        "20220812" : ['000001','000002','000003','000004','000005', '000006','000007','000008','000009','000010'],
        "20220813" : ['000001','000002','000003','000004','000005', '000006','000007','000008','000009','000010'],
        "20220814" : ['000001','000002','000003','000004','000005', '000006','000007','000008','000009','000010']
    },
    'IC2212': {
        "20220808" : ['000001','000002','000003','000004','000005', '000006','000007','000008','000009','000010'],
        "20220809" : ['000001','000002','000003','000004','000005', '000006','000007','000008','000009','000010'],
        "20220810" : ['000001','000002','000003','000004','000005', '000006','000007','000008','000009','000010'],
        "20220811" : ['000001','000002','000003','000004','000005', '000006','000007','000008','000009','000010'],
        "20220812" : ['000001','000002','000003','000004','000005', '000006','000007','000008','000009','000010'],
        "20220813" : ['000001','000002','000003','000004','000005', '000006','000007','000008','000009','000010'],
        "20220814" : ['000001','000002','000003','000004','000005', '000006','000007','000008','000009','000010']
    },
    'IF2212': {
        "20220808" : ['000001','000002','000003','000004','000005', '000006','000007','000008','000009','000010'],
        "20220809" : ['000001','000002','000003','000004','000005', '000006','000007','000008','000009','000010'],
        "20220810" : ['000001','000002','000003','000004','000005', '000006','000007','000008','000009','000010'],
        "20220811" : ['000001','000002','000003','000004','000005', '000006','000007','000008','000009','000010'],
        "20220812" : ['000001','000002','000003','000004','000005', '000006','000007','000008','000009','000010'],
        "20220813" : ['000001','000002','000003','000004','000005', '000006','000007','000008','000009','000010'],
        "20220814" : ['000001','000002','000003','000004','000005', '000006','000007','000008','000009','000010']
    }
}

# def test_run_process_sequence():
#     t = time.perf_counter()
#     for key in data.keys():
#         handle_instrument(key)
#     print(f'cost time: {time.perf_counter() - t:.8f} s')


# def test_run_process_1_level_parallel():
#     t = time.perf_counter()
#     runner = ProcessRunner(5)
#     for key in data.keys():
#         runner.execute(handle_instrument, args={key})
#     results = runner.get_results()
#     for result in results:
#         print(result.get())
#     runner.close()
#     print(f'cost time: {time.perf_counter() - t:.8f} s')


def test_run_process_2_levels_parallel():
    t = time.perf_counter()
    ProcessExcecutor(5).execute(batch_handle_instrument, ['IH2212', 'IC2212', 'IF2212'])
    print(f'cost time: {time.perf_counter() - t:.8f} s')

def handle_instrument(instrument):
    date_list = data[instrument]
    for date in date_list:
        handle_date(instrument, date)

def batch_handle_instrument(instrument):
    date_list = data[instrument]
    date_list = list(map(lambda date : [instrument, date], date_list))
    print(date_list)
    ProcessExcecutor(5).execute(handle_date, date_list)

def handle_date(*arg):
    if len(arg) == 2:
        instrument = arg[0]
        date = arg[1]
    else:
        instrument = arg[0][0]
        date = arg[0][1]
    stock_list = data[instrument][date]
    for stock in stock_list:
        print(instrument + '_' + date + '_' + stock)
    time.sleep(1)

if __name__ == '__main__':
    pytest.main(["-s","-v","test_process_parallel.py"])