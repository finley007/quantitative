import pytest
import time
import gzip
import _pickle as cPickle

from data.access import StockDataAccess, StockDailyDataAccess
from common.localio import read_decompress, save_compress
from framework.localconcurrent import ThreadRunner, ProcessRunner

date = '20200922'
# stock_list = ['000001','000002','000008','000009','000012','000021','000025','000027','000028','000031','000039','000046','000050','000060','000061','000062','000063','000066','000069','000078','000089','000090','000100','000156','000157','000158','000166','000301','000333','000338','000400','000401','000402','000415','000425','000488','000501','000513','000519','000528','000537','000538','000540','000543','000547','000553','000559','000563','000564','000568','000581','000596','000598','000600','000623','000625','000627','000629','000630','000636','000651','000656','000661','000671','000681','000685','000686','000690','000703','000708','000709','000712','000717','000718','000723','000725','000728','000729','000732','000738','000739','000750','000758','000768','000776','000778','000783','000785','000786','000800','000807','000813','000825','000826','000830','000848','000858','000860','000869','000876','000877','000878','000883','000887','000895','000898','000930','000932','000937','000938','000960','000961','000963','000967','000970','000975','000977','000983','000987','000988','000990','000997','000998','000999','001872','001914','001979','002001','002002','002004','002007','002008','002010','002013','002019','002024','002027','002028','002030','002032','002038','002044','002048','002049','002050','002051','002056','002064','002074','002075','002078','002080','002081','002085','002092','002093','002110','002118','002120','002124','002127','002128','002129','002131','002138','002142','002146','002152','002153','002155','002156','002157','002174','002179','002183','002185','002191','002195','002202','002203','002212','002217','002221','002223','002230','002233','002236','002241','002242','002244','002249','002250','002252','002266','002268','002271','002273','002281','002285','002294','002299','002302','002304','002311','002317','002340','002352','002353','002368','002371','002372','002373','002375','002382','002384','002385','002387','002390','002396','002399','002407','002408','002410','002414','002415','002416','002419','002422','002423','002424','002429','002434','002439','002440','002444','002456','002458','002460','002463','002465','002466','002468','002475','002491','002493','002500','002503','002505','002506','002507','002508','002511','002544','002555','002557','002558','002563','002568','002572','002583','002589','002594','002595','002600','002601','002602','002603','002607','002624','002625','002635','002640','002648','002653','002665','002670','002673','002683','002690','002701','002705','002709','002714','002736','002739','002745','002773','002791','002797','002807','002812','002815','002818','002821','002831','002839','002841','002867','002901','002916','002920','002925','002926','002936','002938','002939','002941','002945','002946','002948','002957','002958','002966','002985','003816','300001','300002','300003','300009','300010','300012','300014','300015','300017','300024','300026','300033','300058','300059','300070','300072','300088','300113','300115','300122','300124','300133','300134','300136','300142','300144','300146','300166','300168','300180','300182','300197','300207','300212','300223','300244','300251','300253','300257','300271','300274','300285','300296','300315','300316','300324','300347','300357','300376','300408','300413','300418','300433','300459','300463','300474','300482','300496','300498','300529','300558','300595','300601','300618','300628','300630','300676','300699','600000','600004','600006','600009','600010','600011','600015','600016','600017','600018','600019','600021','600022','600025','600026','600027','600028','600029','600030','600031','600036','600037','600038','600039','600048','600050','600053','600056','600058','600060','600061','600062','600064','600066','600068','600073','600079','600085','600089','600094','600104','600111','600115','600118','600120','600125','600126','600131','600132','600138','600141','600143','600150','600153','600155','600158','600161','600166','600167','600170','600171','600176','600177','600183','600188','600195','600196','600201','600208','600216','600219','600221','600233','600256','600258','600259','600260','600266','600271','600273','600276','600277','600282','600291','600297','600298','600299','600307','600309','600312','600315','600316','600325','600329','600332','600335','600338','600339','600340','600346','600348','600350','600352','600362','600369','600372','600373','600376','600380','600383','600388','600390','600392','600398','600406','600409','600410','600415','600418','600426','600428','600435','600436','600438','600446','600460','600466','600478','600482','600486','600487','600489','600497','600498','600500','600507','600511','600515','600516','600517','600519','600521','600522','600528','600529','600535','600545','600546','600547','600549','600556','600557','600563','600565','600566','600567','600570','600572','600575','600580','600582','600583','600584','600585','600588','600597','600598','600600','600606','600623','600633','600637','600639','600640','600642','600643','600645','600648','600649','600655','600657','600660','600664','600667','600673','600674','600675','600690','600694','600699','600703','600704','600705','600707','600717','600718','600728','600729','600733','600737','600739','600741','600745','600748','600751','600754','600755','600757','600760','600763','600765','600770','600776','600777','600779','600782','600787','600795','600801','600804','600808','600809','600811','600820','600823','600827','600835','600837','600839','600845','600848','600859','600862','600863','600867','600869','600871','600872','600874','600875','600879','600881','600884','600885','600886','600887','600893','600895','600900','600901','600903','600908','600909','600917','600918','600919','600926','600928','600958','600959','600967','600968','600970','600977','600985','600989','600996','600998','600999','601000','601003','601005','601006','601009','601012','601016','601018','601019','601021','601066','601068','601077','601088','601098','601099','601100','601106','601108','601111','601117','601118','601127','601128','601138','601139','601155','601162','601166','601168','601169','601179','601186','601198','601200','601211','601212','601216','601225','601228','601229','601231','601233','601236','601238','601288','601298','601318','601319','601328','601333','601336','601360','601377','601390','601398','601512','601555','601577','601598','601600','601601','601607','601608','601611','601615','601618','601628','601633','601658','601668','601669','601678','601688','601689','601696','601698','601699','601717','601718','601727','601766','601778','601788','601799','601800','601801','601808','601811','601816','601818','601828','601838','601857','601860','601865','601866','601869','601872','601877','601878','601880','601881','601888','601898','601899','601901','601916','601919','601928','601933','601939','601958','601966','601969','601975','601985','601988','601989','601990','601992','601997','601998','603000','603019','603025','603056','603077','603087','603156','603160','603195','603198','603225','603228','603233','603256','603259','603260','603288','603290','603317','603328','603338','603345','603355','603369','603377','603379','603392','603444','603486','603501','603515','603517','603556','603568','603589','603605','603638','603650','603658','603659','603707','603708','603712','603719','603737','603766','603786','603799','603806','603816','603833','603858','603866','603868','603882','603883','603885','603888','603893','603899','603927','603939','603983','603986','603993','688002','688008','688009','688012','688029','688036','688088','688099','688321']
stock_list = ['000001','000002','000008','000009','000012','000021','000025','000027','000028','000031','000039','000046','000050','000060','000061','000062','000063','000066','000069','000078','000089','000090','000100','000156','000157','000158','000166','000301','000333','000338','000400','000401','000402','000415','000425','000488','000501','000513','000519','000528','000537','000538','000540','000543','000547','000553','000559','000563','000564','000568','000581','000596','000598','000600','000623','000625','000627','000629','000630','000636','000651','000656','000661','000671','000681','000685','000686','000690','000703','000708','000709','000712','000717','000718','000723','000725','000728','000729','000732','000738','000739','000750','000758','000768','000776','000778','000783','000785','000786','000800','000807','000813','000825','000826','000830','000848','000858','000860','000869','000876']
data_access = StockDataAccess(False)
multiply = 1

def test_sequence_run():
    t = time.perf_counter()
    results = []
    test_stock_list = []
    for i in range(1, multiply + 1):
        test_stock_list = test_stock_list + stock_list
    for stock in test_stock_list:
        results.append(data_access.access(date, stock))
    print(f'cost time: {time.perf_counter() - t:.8f} s')

def test_concurrency_thread_run():
    t = time.perf_counter()
    test_stock_list = []
    for i in range(1, multiply + 1):
        test_stock_list = test_stock_list + stock_list
    results = ThreadRunner(10).execute(get_data, test_stock_list)
    print(f'cost time: {time.perf_counter() - t:.8f} s')

def test_concurrency_process_run():
    t = time.perf_counter()
    runner = ProcessRunner(20)
    test_stock_list = []
    for i in range(1, multiply + 1):
        test_stock_list = test_stock_list + stock_list
    for stock in test_stock_list:
        runner.execute(get_data, args={stock})
    results = runner.get_results()
    for result in results:
        result.get()
    print(f'cost time: {time.perf_counter() - t:.8f} s')

def get_data(stock):
    return data_access.access(date, stock)

# def test_load_combined_file():
#     daily_data_access = StockDailyDataAccess()
#     t = time.perf_counter()
#     data = daily_data_access.access('2020-09-22')
#     print(len(data))
#     print(f'cost time: {time.perf_counter() - t:.8f} s')
#
# def test_load_combined_file1():
#     # 压缩对读取性能影响不大
#     path = 'F:\\data\\20200922.pkl'
#     path1 = 'F:\\data\\20200922_nocompress.pkl'
#     t = time.perf_counter()
#     with gzip.open(path, 'rb', compresslevel=1) as file_object:
#         raw_data = file_object.read()
#     data = cPickle.loads(raw_data)
#     print(len(data))
#     print(f'cost time: {time.perf_counter() - t:.8f} s')
#     t = time.perf_counter()
#     with gzip.open(path1, 'rb', compresslevel=1) as file_object:
#         raw_data = file_object.read()
#     data = cPickle.loads(raw_data)
#     print(len(data))
#     print(f'cost time: {time.perf_counter() - t:.8f} s')

# def test_sequence_run_for_batch_file():
#     t = time.perf_counter()
#     for i in range(1, 8, 1):
#         path = 'E:\\data\\test\\'
#         data = read_decompress(path + '20200922_' + str(i+1) + '.pkl')
#     print(f'cost time: {time.perf_counter() - t:.8f} s')

# def test_concurrency_thread_run_for_batch_file():
#     t = time.perf_counter()
#     list = [1, 2, 3, 4, 5, 6, 7, 8]
#     # list = [1, 2, 3]
#     results = ThreadRunner(5).execute(get_data_for_batch_file, list)
#     print(f'cost time: {time.perf_counter() - t:.8f} s')

# def test_concurrency_process_run_for_batch_file():
#     t = time.perf_counter()
#     runner = ProcessRunner(2)
#     list = [1, 2, 3, 4, 5, 6, 7, 8]
#     for index in list:
#         runner.execute(get_data_for_batch_file, args={index})
#     results = runner.get_results()
#     for result in results:
#         result.get()
#     print(f'cost time: {time.perf_counter() - t:.8f} s')

# def get_data_for_batch_file(index):
#     path = 'E:\\data\\test\\'
#     return read_decompress(path + '20200922_' + str(index) + '.pkl')

if __name__ == '__main__':
    pytest.main(["-s","-v","test_loadfile_pte.py"])