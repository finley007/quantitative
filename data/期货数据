期货数据

描述：
1. tick数据，500ms采样一次
2. 按合约命名
   IF：合约数，起止时间，记录数
   文件大小总和 
      IF: du -hs  8.6g
      IH: du -hs  5.9g
      IC: du -hs  8.8g

schema:
datetime - 采样时间
CFFEX.IC2212.last_price - 现价
CFFEX.IC2212.highest - 最高价
CFFEX.IC2212.lowest - 最低价
CFFEX.IC2212.bid_price1 - 卖价
CFFEX.IC2212.bid_volume1 - 卖量
CFFEX.IC2212.ask_price1 - 买价
CFFEX.IC2212.ask_volume1 - 买量
CFFEX.IC2212.volume - 成交量
CFFEX.IC2212.amount - 成交额
CFFEX.IC2212.open_interest - 未平仓合约

数据验证：
1. 两份数据源进行对比，具体方法见数据验证算法

数据处理：
1. 列名转化: 去掉列名中的前缀和合约信息，便于后面的代码统一处理 FutureTickDataColumnTransform
2. 数据对齐: FutureTickDataEnricher
3. 数据填充: FutureTickDataEnricher 
4. 收盘冗余数据处理
5. 合并k线，这一步替代了2，3，4步
6. 拼装成合约文件并计算ret，每天收盘前的ret用收盘价计算，不跨天 ret: 1, 2, 5, 10, 20, 30


算法：
数据填充算法：
   4 * 60 * 60 * 2 = 28800
   目的：tick数据对于一些成交量小的合约可能会存在一段时间都没有交易记录的情况，为了使数据连续，需要填充这部分数据
   算法：创建一个新列：delta_time，用下一个datetime减去当前datetime，过滤出所有delta_time大于0.5的计算填充的数据.
   考虑跨天：按天处理
   考虑11:30-13:00中午休盘：
      1. 检查delta_time_sec如果大于等于1.5个小时，减去1.5小时
      2. 修改time_advance方法，处理跨休盘时间
数据对齐算法：
   目的：2017-01-18 10:27:16.900000000将毫秒级别的数据对齐到0和5，方便比较
   算法：0-4改成0 5-9改成5
数据验证算法：
   目标：确保数据的有效性用另一个数据集做比对
   算法：
      v1 比较数据集的数据量缺失的比较验证，遍历比较数据集，和目标数据集的字段进行签名比较，如果相同加入统计，如果不同打出明细。生成一个比较结果文件。
      v2 基于问题1的分析，更改算法：通过volume过滤目标数据集将时间驱动变更为事件驱动与比较数据集比较验证
      v3 计算太慢，需要优化
         方案一：将计算交给pandas，pandas底层计算可能经过优化 - fail
         方案二：分页思想+多线程 - 提升也不明显，大概是因为gil
数据修补算法：
   情形一：
   282628  2017-05-04 14:59:58.000000000                   3383.4   
282629  2017-05-04 14:59:58.500000000                   3383.4   
282630  2017-05-04 14:59:59.000000000                   3383.4   
282631  2017-05-04 14:59:59.500000000                   3384.0   
282632  2017-05-04 14:59:59.500020000                   3383.4   
282633  2017-05-04 14:59:59.500070000                   3383.4   

        CFFEX.IF1705.ask_price1  CFFEX.IF1705.bid_price1  \
282628                   3384.0                   3383.4   
282629                   3383.6                   3383.4   
282630                   3383.6                   3383.4   
282631                   3384.0                   3383.4   
282632                   3383.6                   3383.2   
282633                   3383.6                   3383.2   

        CFFEX.IF1705.ask_volume1  CFFEX.IF1705.bid_volume1  \
282628                        12                         2   
282629                         1                         2   
282630                         1                         1   
282631                        10                         1   
282632                         1                         1   
282633                         1                         1   

        CFFEX.IF1705.volume  
282628                13854  
282629                13854  
282630                13855  
282631                13858  
282632                13859  
282633                13859  
这种情形会影响ret的计算，因为ret都是用shift按index等间距计算而不是按时间，因此会多计算几个因子。处理方法将14:59:59.5之后的数据去最新的一条作为15:00:00时刻的数据
数据聚合算法：
1. 以合约和天联合，对应数据库一条记录，用于控制断点续传
2. 每天以9:15开始给一个start_time, end_time=start_time + 3s, 生成一个新列：current_price用下一条记录的last_price
   o c h l都必须以成交为基础，所以应该先求volume的差值。下面分成三种情况：
   a. 如果当前区间不包含任何记录，取上一个记录的current_price作为当前区间的o c h l
   b. 如果当前区间包含一条记录，该记录和起始时刻对齐，取这唯一一条记录的current_price作为o c h l,如果没有和起始位置对齐，取当前的last_price作为o，当前的current_price作为c，h和l比较两者之间
   c. 如果有多条记录o类似于b，c取最后一条的current_price，h，l比较得到
   生成一个临时文件到temp
3. 按合约拼装临时文件，如何处理交接的部分？生成ret
   

问题：
1. 两个数据集数据差异很大
先对两个数据集分度：
获取比较日期：
IC1701
CFFEX.IC1701.csv日期列表
['2016-11-21', '2016-11-22', '2016-11-23', '2016-11-24', '2016-11-25', '2016-11-28', '2016-11-29', '2016-11-30', '2016-12-01', '2016-12-02', '2016-12-05', '2016-12-06', '2016-12-07', '2016-12-08', '2016-12-09', '2016-12-12', '2016-12-13', '2016-12-14', '2016-12-15', '2016-12-16', '2016-12-19', '2016-12-20', '2016-12-21', '2016-12-22', '2016-12-23', '2016-12-26', '2016-12-27', '2016-12-28', '2016-12-29', '2016-12-30', 
'2017-01-03', '2017-01-04', '2017-01-05', '2017-01-06', '2017-01-09', '2017-01-10', '2017-01-11', '2017-01-12', '2017-01-13', '2017-01-16', '2017-01-17', '2017-01-18', '2017-01-19', '2017-01-20']
IC1701.CCFX-ticks.pkl日历列表
['2017-01-03', '2017-01-04', '2017-01-05', '2017-01-06', '2017-01-09', '2017-01-10', '2017-01-11', '2017-01-12', '2017-01-13', '2017-01-16', '2017-01-17', '2017-01-18', '2017-01-19']
每个日期的记录数
      CFFEX.IC1701.csv  IC1701.CCFX-ticks.pkl
'2017-01-03'  10854  4384
   '2017-01-03 09'  2099  1065
   '2017-01-03 10'  2847  1228
   '2017-01-03 11'  1111  367
   '2017-01-03 13'  1983  606
   '2017-01-03 14'  2814  1118
'2017-01-04'  11546  4926
'2017-01-05'  9492   3831
'2017-01-06'  10619  4055
'2017-01-09'  10078  4086
'2017-01-10'  9527   3941
'2017-01-11'  11525  4746
'2017-01-12'  11363  4477
'2017-01-13'  11992  5192
'2017-01-16'  13304  6247
'2017-01-17'  13055  5873
'2017-01-18'  11969  5303
'2017-01-19'  10345  4479
target：time driven
compare：event driven

